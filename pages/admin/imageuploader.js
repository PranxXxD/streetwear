import React, { useState } from "react";
import FullLayout from "../../src/layouts/FullLayout";
import theme from "../../src/theme/theme";
import { ThemeProvider } from "@mui/material/styles";
import Head from "next/head";
import { Grid, TextField, ImageList, ImageListItem } from "@mui/material";
import BaseCard from "../../src/components/baseCard/BaseCard";
import Product from "../../models/Product";
import mongoose from "mongoose";
import TransformImage from "../../components/images";

// adding an image to database and showing in dashboard -> pending
const ImageUploader = ({ products }) => {
  function srcset(size, rows = 1, cols = 2) {
    return {
      src: `${products}?w=${size * cols}&h=${size * rows}&fit=crop&auto=format`,
      srcSet: `${products}?w=${size * cols}&h=${
        size * rows
      }&fit=crop&auto=format&dpr=2 2x`,
    };
  }
  // create the widget
  const [imagePublicId, setImagePublicId] = useState("");

  const openWidget = () => {
    const widget = window.cloudinary.createUploadWidget(
      {
        cloudName: "pranxxxd",
        uploadPreset: "streetWear",
      },
      (error, result) => {
        if (
          result.event === "success" &&
          result.info.resource_type === "image"
        ) {
          console.log(result.info);
          setImagePublicId(result.info.public_id);
        }
      }
    );
    widget.open(); // open up the widget after creation
  };

  return (
    <>
      <Head>
        <title>streetWear.com:admin</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <script
          src="https://widget.Cloudinary.com/v2.0/global/all.js"
          type="text/javascript"
        ></script>
      </Head>
      <ThemeProvider theme={theme}>
        <style jsx global>{`
          footer {
            display: none;
          }
        `}</style>
        <FullLayout>
          <Grid container spacing={0}>
            <Grid item xs={12} lg={12}>
              <BaseCard title="Upload an Image">
                <button
                  onClick={openWidget}
                  className="flex my-1 text-white bg-[#2bc3de] border-0 py-2 px-2 focus:outline-none hover:bg-[#19b7d3] rounded text-md"
                >
                  upload
                </button>
                <ImageList
                  sx={{ height: 400 }}
                  variant="quilted"
                  cols={4}
                  rowHeight={500}
                >
                  {products.map((product) => {
                    return (
                      // <ImageListItem
                      //   key={product.img}
                      //   cols={product.cols || 1}
                      //   rows={product.rows || 1}
                      // >
                      <img
                        // {...srcset(product.rows, product.cols)}
                        alt="ecommerce"
                        className="h-[30vh] md:h-[36vh] block m-auto p-4 row-auto col-auto"
                        src={product.img}
                      />
                    );
                  })}
                </ImageList>
              </BaseCard>
            </Grid>
          </Grid>
        </FullLayout>
      </ThemeProvider>
    </>
  );
};

export async function getServerSideProps(context) {
  let error = null;

  if (!mongoose.connections[0].readyState) {
    await mongoose.connect(process.env.MONGO_URI);
  }
  let products = await Product.find();
  // console.log(products);
  return {
    props: { products: JSON.parse(JSON.stringify(products)) }, // will be passed to the page component as props
  };
}

export default ImageUploader;
