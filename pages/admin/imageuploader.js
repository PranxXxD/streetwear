import React, { useState } from "react";
import FullLayout from "../../src/layouts/FullLayout";
import theme from "../../src/theme/theme";
import { ThemeProvider } from "@mui/material/styles";
import Head from "next/head";
import { Grid, TextField, ImageList, ImageListItem } from "@mui/material";
import BaseCard from "../../src/components/baseCard/BaseCard";
import Product from "../../models/Product";
import mongoose from "mongoose";
import { FileUpload } from "primereact/fileupload";
import "primereact/resources/themes/lara-light-blue/theme.css";
import "primereact/resources/primereact.min.css";
import "primeicons/primeicons.css";

// adding an image to database and showing in dashboard -> pending
const ImageUploader = ({ products }) => {
  return (
    <>
      <Head>
        <title>streetWear.com:admin</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ThemeProvider theme={theme}>
        <style jsx global>{`
          footer {
            display: none;
          }
        `}</style>
        <FullLayout>
          <Grid container spacing={0}>
            <Grid item xs={12} lg={12}>
              <BaseCard title="Upload an Image">
                <FileUpload name="demo" url="../api/profile" multiple />
                <ImageList
                  sx={{ height: 400 }}
                  variant="quilted"
                  cols={4}
                  rowHeight={500}
                >
                  {products.map((product) => {
                    return (
                      <img
                        alt="ecommerce"
                        className="h-[30vh] md:h-[36vh] block m-auto p-4 row-auto col-auto"
                        src={product.img}
                      />
                    );
                  })}
                </ImageList>
              </BaseCard>
            </Grid>
          </Grid>
        </FullLayout>
      </ThemeProvider>
    </>
  );
};

export async function getServerSideProps(context) {
  let error = null;

  if (!mongoose.connections[0].readyState) {
    await mongoose.connect(process.env.MONGO_URI);
  }
  let products = await Product.find();
  // console.log(products);
  return {
    props: { products: JSON.parse(JSON.stringify(products)) }, // will be passed to the page component as props
  };
}

export default ImageUploader;
